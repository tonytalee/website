blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::preview_site(startup = TRUE)
blogdown::stop_server()
blogdown:::preview_site(startup = TRUE)
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown:::preview_site(startup = TRUE)
blogdown::stop_server()
blogdown:::preview_site()
blogdown::serve_site()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::serve_site()
blogdown:::preview_site(startup = TRUE)
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown:::preview_site()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown:::preview_site()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown:::preview_site()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown:::preview_site()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown:::preview_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown::stop_server()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
bookdown:::mathquill()
blogdown:::update_meta_addin()
blogdown:::serve_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::serve_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown::stop_server()
blogdown::serve_site()
blogdown:::preview_site(startup = TRUE)
blogdown::stop_server()
blogdown::serve_site()
blogdown:::preview_site(startup = TRUE)
blogdown::stop_server()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown::stop_server()
blogdown:::serve_site()
qnorm(0.01)
dnorm(0)
pnorm(0)
blogdown:::preview_site(startup = TRUE)
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::preview_site(startup = TRUE)
blogdown::stop_server()
blogdown:::preview_site(startup = TRUE)
blogdown:::new_post_addin()
df_his <- read.csv("./data/grr_data_collection.csv", stringsAsFactors = F)
df_his <- read.csv("../data/grr_data_collection.csv", stringsAsFactors = F)
head(df_his)
li <- readRDS("./data/li_grr_raw.rds")
str(li)
li <- readRDS("../data/li_grr_raw.rds")
str(li)
df <- read.csv("../data/grr_data.csv", stringsAsFactors = F)
head(df)
blogdown::stop_server()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown::stop_server()
blogdown:::serve_site()
blogdown:::preview_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::preview_site(startup = TRUE)
blogdown::stop_server()
blogdown:::preview_site(startup = TRUE)
blogdown::stop_server()
blogdown:::serve_site()
blogdown:::preview_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
blogdown::hugo_version()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
install.packages(c("blogdown", "bookdown"))
blogdown:::preview_site(startup = TRUE)
install.packages(c("blogdown", "bookdown"))
blogdown:::preview_site(startup = TRUE)
install.packages(c("blogdown", "bookdown"))
blogdown::stop_server()
blogdown:::preview_site(startup = TRUE)
install.packages("blogdown")
install.packages("blogdown")
blogdown::update_hugo()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown::hugo_version()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown::check_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown::check_hugo()
blogdown::config_Rprofile()
if (file.exists("~/.Rprofile")) {
base::sys.source("~/.Rprofile", envir = environment())
}
blogdown::config_Rprofile()
blogdown::build_site(build_rmd = TRUE)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::build_site(build_rmd = TRUE)
blogdown:::serve_site()
blogdown::build_site(build_rmd = TRUE)
blogdown::build_site(build_rmd = TRUE)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown::build_site(build_rmd = TRUE)
blogdown:::new_post_addin()
blogdown::stop_server()
getwd()
options(knitr.kable.NA = '')
# Load libraries and raw data
library(formattable)
library(kableExtra)
library(knitr)
library(lubridate)
library(scales)
library(ggplot2)
library(GGally)
library(tidyr)
library(dplyr)
library(readr)
library(tibble)
library(stringr)
library(purrr)
library(forcats)
library(plotly)
library(setGplot)
library(setPlotly)
source("./function/grr_functions.R")
source("../function/grr_functions.R")
options(knitr.kable.NA = '')
# Load libraries and raw data
library(formattable)
library(kableExtra)
library(knitr)
library(lubridate)
library(scales)
library(ggplot2)
library(GGally)
library(tidyr)
library(dplyr)
library(readr)
library(tibble)
library(stringr)
library(purrr)
library(forcats)
library(plotly)
library(setGplot)
library(setPlotly)
source("../function/grr_functions.R")
source("../function/spc_functions.R")
source("../function/html_setting.R")
# parameters
df = read_csv("./data/grr_data.csv")
options(knitr.kable.NA = '')
# Load libraries and raw data
library(formattable)
library(kableExtra)
library(knitr)
library(lubridate)
library(scales)
library(ggplot2)
library(GGally)
library(tidyr)
library(dplyr)
library(readr)
library(tibble)
library(stringr)
library(purrr)
library(forcats)
library(plotly)
library(setGplot)
library(setPlotly)
source("../function/grr_functions.R")
source("../function/spc_functions.R")
source("../function/html_setting.R")
# parameters
df = read_csv("../data/grr_data.csv")
tolerance = 66
grr_criteria = c(0.1, 0.3)
# grr
li_grr <- fun.grr.std(df, tolerance)
library(car)
# grr
li_grr <- fun.grr.std(df, tolerance)
options(knitr.kable.NA = '')
# Load libraries and raw data
library(formattable)
library(kableExtra)
library(knitr)
library(lubridate)
library(scales)
library(ggplot2)
library(GGally)
library(tidyr)
library(dplyr)
library(readr)
library(tibble)
library(stringr)
library(purrr)
library(forcats)
library(plotly)
library(setGplot)
library(setPlotly)
library(spcChart)
library(qcc)
library(car)
source("../function/grr_functions.R")
source("../function/spc_functions.R")
source("../function/html_setting.R")
# parameters
df = read_csv("../data/grr_data.csv")
tolerance = 66
grr_criteria = c(0.1, 0.3)
# grr
li_grr <- fun.grr.std(df, tolerance)
tb_grr <- li_grr$tb_grr
cat("<div class= 'listx'>")
# Number of parts
if (ract_grr_li()$n_parts < 5) {
note <- "Number of parts are less than 5! It's not enough to make a reliable GRR analysis"
cat("<p>", cross_mark, note, "</p>")
}
cat("<div class= 'listx'>")
# GRR
perSV <- tb_grr["Total R&R", "perSV"]
if (perSV <= grr_criteria[1] * 100) {
mark <- check_mark
note <- "The measurement system is acceptable."
} else if (perSV <= grr_criteria[2] * 100) {
mark <- excla_mark
note <- "The measurement system is potentially acceptable."
} else {
mark <- cross_mark
note <- "The measurement system is not acceptable."
}
note <- paste0("%GRR = ", round(perSV, 1), " : <br>", note)
cat("<p>", mark, note, "</p>")
# NDC
if (li_grr$ndc <5) {
mark <- cross_mark
note <-"The measurement system cannot well distinguish between parts."
} else {
mark <- check_mark
note <- "The measurement system can distinguish between parts."
}
note <- paste0("Number of distinct categories = ", li_grr$ndc, " : <br>", note)
cat("<p>", mark, note, "</p>")
# Proportion of repeatiblity to reproducibility
perRepeat <- round(tb_grr["Repeatability", "Variance"] / tb_grr["Total R&R", "Variance"] * 100, 1)
perReprod <- round(tb_grr["Reproducibility", "Variance"] / tb_grr["Total R&R", "Variance"] * 100, 1)
mark <- info_mark
note <- paste0("Repeatability contributes ", perRepeat,
"% of GRR variance, and reproducibility contributes ",
perReprod, "%.")
cat("<p>", mark, note, "</p>")
# Effect of operator
pValue_operator <- round(li_grr$aov["Operator", "Pr(>F)"], 3)
if (pValue_operator < 0.05) {
mark <- cross_mark
if (nrow(tb_grr) > 5) {
varx <- tb_grr["Operator", "Variance"]
} else {
varx <- tb_grr["Reproducibility", "Variance"]
}
perOperator <- round(varx / tb_grr["Total R&R", "Variance"] * 100, 1)
note <- paste0("Effect of operators is significant, with p-value of ANOVA = ",
pValue_operator,
".<br>Operator contributes ", perOperator, "% of GRR variance.")
} else {
mark <- check_mark
note <- "Effect of operator is not significant."
}
cat("<p>", mark, note, "</p>")
# Interaction
if (li_grr$pValue_interact < 0.05) {
mark <- cross_mark
perInt <- round(tb_grr["Operator:Part", "Variance"] / tb_grr["Total R&R", "Variance"] * 100, 1)
note <- paste0("Interaction between operators and parts is significant, with p-value of ANOVA = ",
round(li_grr$pValue_interact, 3),
".<br>Interaction contributes ", perInt, "% of GRR variance.")
} else {
mark <- check_mark
note <- "There is no interaction between operators and parts."
}
cat("<p>", mark, note, "</p>")
# GRR conditions
mark <- info_mark
note <- paste0("Number of operators = ", li_grr$n_operator,
", Number of trials = ", li_grr$n_trial,
", Number of parts = ",  li_grr$n_parts)
cat("<p>", mark, note, "</p>")
cat("</div>")
# create GRR table
colnames = c("Variance", "Std. Dev.", "Study Var.", "% Study Var.",
"% Contribution")
if (! is.null(tolerance)) {
colnames = c(colnames, "% Tolerance")
}
tbl <- kable(tb_grr, col.names = colnames, digits = c(3, 3, 3, 1, 1, 1),
caption = "GRR table") %>%
kable_styling(bootstrap_options = c("hover"),
full_width = F,
font_size = 14,
position = "left") %>%
add_indent(2:3) %>%
column_spec(c(1,5), bold = T) %>%
row_spec(2:3, color = "grey")
if (nrow(tb_grr) > 5) {
tbl <- tbl %>%
add_indent(4:5) %>%
add_indent(4:5) %>%
row_spec(4:5, color = "grey")
}
# show compoent plot
li_grr$p_comp
# show grr table
tbl
df_xbar <- li_grr$li_spc$df_xbar
total_points <-  nrow(df_xbar)
xbar_ooc_rate <- nrow(df_xbar[df_xbar$label != "normal",]) / total_points
if (xbar_ooc_rate < 0.5) {
mark1 <- cross_mark
note1 <- "That means the parts variation is difficult to detect by the measurement system."
} else if (xbar_ooc_rate < 0.8) {
mark1 <- excla_mark
note1 <- "That means the measurement system can but not well detect the parts variation."
} else {
mark1 <- check_mark
note1 <- "That means the parts variation is easy to detect by the measurement system."
}
df_r <- li_grr$li_spc$df_r
r_normal_rate <- nrow(df_r[df_r$label == "normal", ]) / total_points
if (r_normal_rate < 0.75) {
mark2 <- cross_mark
note2 <- "There is no consistency to the measurement system."
} else if (r_normal_rate < 0.95) {
mark2 <- excla_mark
note2 <- "The measurement system potentially has decent consistency."
} else {
mark2 <- check_mark
note2 <- "The measurement system has good consistency."
}
li_grr$li_spc$p
cat("<div class= 'listx'>")
# Effect of operator
pValue_operator <- round(li_grr$aov["Operator", "Pr(>F)"], 3)
if (pValue_operator < 0.05) {
mark <- cross_mark
note <- "No"
} else {
mark <- check_mark
note <- "Yes"
}
note <- paste0("Operators measuring the parts similiarly: ", note,
".<br>P-value of ANOVA (comparing mean) = ", pValue_operator, ".")
cat("<p>", mark, note, "</p>")
# Equal variation across operators
operator_varTest_pValue <- round(li_grr$operator_varTest_pValue, 3)
if (operator_varTest_pValue < 0.05) {
mark <- cross_mark
note <- "No"
} else {
mark <- check_mark
note <- "Yes"
}
note <- paste0("Operators' measurement have the same variation: ", note,
".<br>P-value of Levene's test (comparing variance) = ",
operator_varTest_pValue, ".")
cat("<p>", mark, note, "</p>")
cat("</div>")
# plot
li_grr$p_oper
cat("<div class= 'listx'>")
if (li_grr$pValue_interact < 0.05) {
mark <- cross_mark
note <- "No"
} else {
mark <- check_mark
note <- "Yes"
}
note <- paste0("No interaction between operators and parts: ", note,
".<br>P-value of ANOVA = ", round(li_grr$pValue_interact, 3), ".")
cat("<p>", mark, note, "</p>")
cat("</div>")
# plot
li_grr$p_inter
cat("<div class= 'listx'>")
# Equal variation across operators
part_varTest_pValue <- round(li_grr$part_varTest_pValue, 3)
if (part_varTest_pValue < 0.05) {
mark <- cross_mark
note <- "No"
} else {
mark <- check_mark
note <- "Yes"
}
note <- paste0("Parts are measured with the same variation: ", note,
".<br>P-value of Levene's test (comparing variance) = ",
part_varTest_pValue, ".")
cat("<p>", mark, note, "</p>")
cat("</div>")
# plot
li_grr$p_part
options(knitr.kable.NA = '')
kable(li_grr$aov, digits = 3) %>%
kable_styling(full_width = F)
blogdown:::preview_site()
install.packages("blogdown")
blogdown::update_hugo()
blogdown::build_site()
blogdown:::serve_site()
blogdown::build_site(build_rmd= TRUE)
blogdown::hugo_version()
